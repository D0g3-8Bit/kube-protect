# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pvcc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi

# ---

# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mysql-pv
# spec:
#   capacity:
#     storage: 2Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   hostPath:
#     path: /var/lib/mysql


# ---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-python-app-sa-admin-binding
subjects:
- kind: ServiceAccount
  name: test-python-app-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-python-app-sa
  namespace: default

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mysql
# spec:
#   selector:
#     matchLabels:
#       app: mysql
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: mysql
#     spec:
#       containers:
#       - name: mysql
#         image: mysql:8.0
#         env:
#         - name: MYSQL_ROOT_PASSWORD
#           value: "root"
#         - name: MYSQL_DATABASE
#           value: "k8s"
#         - name: MYSQL_USER
#           value: "uu2fu3o"
#         - name: MYSQL_PASSWORD
#           value: "uu2fu3o"
#         ports:
#         - containerPort: 3306
#         volumeMounts:
#         - name: mysql-persistent-storage
#           mountPath: /var/lib/mysql
#       volumes:
#       - name: mysql-persistent-storage
#         persistentVolumeClaim:
#           claimName: mysql-pvcc

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: mysql
# spec:
#   ports:
#   - port: 3306
#   selector:
#     app: mysql
#   clusterIP: None

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: python-test
spec:
  selector:
    matchLabels:
      app: python-test
  template:
    metadata:
      labels:
        app: python-test
    spec:
      serviceAccountName: test-python-app-sa
      containers:
      - name: python-pl
        image: uu2fu3o/malicious:v1.0.5
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_HOST
            value: "mysql"
          - name: DB_USER
            value: "uu2fu3o"
          - name: DB_PASSWORD
            value: "uu2fu3o"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
          - name: sys-fs
            mountPath: /sys
          - name: proc
            mountPath: /proc
          - name: dev
            mountPath: /dev
          - name: lib-modules
            mountPath: /lib/modules
            readOnly: true
          - name: usr-src  
            mountPath: /usr/src
            readOnly: true
          - name: boot  
            mountPath: /boot
          - name: sys-kernel-debug
            mountPath: /sys/kernel/debug
          - name: docker-sock
            mountPath: /var/run/docker.sock
      volumes:
        - name: sys-fs
          hostPath:
            path: /sys
        - name: proc
          hostPath:
            path: /proc
        - name: dev
          hostPath:
            path: /dev
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-src  
          hostPath:
            path: /usr/src
            type: Directory
        - name: boot  
          hostPath:
            path: /boot
            type: Directory
        - name: sys-kernel-debug
          hostPath:
            path: /sys/kernel/debug
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-deployment     
  namespace: default
spec:
  replicas: 1           
  selector:
    matchLabels:
      app: k8sgo
  template:
    metadata:
      labels:
        app: k8sgo
    spec:
      serviceAccountName: test-python-app-sa 
      containers:
      - name: k8sgo         
        image: uu2fu3o/k8s:gogo7
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
